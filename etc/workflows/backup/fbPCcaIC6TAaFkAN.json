{
  "createdAt": "2025-02-01T07:28:42.940Z",
  "updatedAt": "2025-02-01T09:15:26.583Z",
  "id": "fbPCcaIC6TAaFkAN",
  "name": "Process DBFields Local Detailed Ollama",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "protocol": "sftp",
        "path": "=/dbfields/processing/{{ $('Pick file').item.json.name }}",
        "binaryPropertyName": "File"
      },
      "id": "7cbc2b6c-e19a-4dfe-89cd-3bc3ac87e38c",
      "name": "FTP Download file",
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        -1300,
        120
      ],
      "credentials": {
        "sftp": {
          "id": "8w2Qr9qTiy7DwIn6",
          "name": "SFTP account"
        }
      }
    },
    {
      "parameters": {
        "protocol": "sftp",
        "operation": "list",
        "path": "/dbfields/to_process"
      },
      "id": "e45ca31b-bd02-41c1-a6de-7d97f49fde26",
      "name": "FTP List files on ftp",
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        -2480,
        120
      ],
      "credentials": {
        "sftp": {
          "id": "8w2Qr9qTiy7DwIn6",
          "name": "SFTP account"
        }
      }
    },
    {
      "parameters": {
        "operation": "limit"
      },
      "id": "92b7cd96-2313-4a94-9ba9-d1dd8a0f2944",
      "name": "Pick file",
      "type": "n8n-nodes-base.itemLists",
      "typeVersion": 2.1,
      "position": [
        -1840,
        120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.name }}",
              "operation": "endsWith",
              "value2": "csv"
            }
          ]
        }
      },
      "id": "27831532-8d03-408b-90c1-d30779983ca4",
      "name": "Filter only PDFs",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 1,
      "position": [
        -2060,
        120
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "path": "=dbfields/json",
        "options": {
          "fileName": "={{ $binary.data.fileName }}"
        }
      },
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        1000,
        1060
      ],
      "id": "d4fa22c6-8fb5-4d4b-bc61-6b1f782071a3",
      "name": "Upload file via SSH",
      "credentials": {
        "sshPassword": {
          "id": "eoOYUfiDJDXPvU27",
          "name": "SSH Password account"
        }
      }
    },
    {
      "parameters": {
        "protocol": "sftp",
        "operation": "rename",
        "oldPath": "={{ $json.path }}",
        "newPath": "=/dbfields/processing/{{ $json.name }}",
        "options": {
          "createDirectories": true
        }
      },
      "id": "1f6acc84-2fb0-4e37-b393-a64c1b29461d",
      "name": "FTP Move file to Processing",
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        -1560,
        120
      ],
      "credentials": {
        "sftp": {
          "id": "8w2Qr9qTiy7DwIn6",
          "name": "SFTP account"
        }
      }
    },
    {
      "parameters": {
        "protocol": "sftp",
        "operation": "rename",
        "oldPath": "=/dbfields/processing/{{ $('Pick file').item.json.name }}",
        "newPath": "=/dbfields/done/{{ $('Pick file').item.json.name }}",
        "options": {
          "createDirectories": true
        }
      },
      "id": "62f81aa2-0570-4796-b475-603ccd6a9cb7",
      "name": "FTP Move file to Done",
      "type": "n8n-nodes-base.ftp",
      "typeVersion": 1,
      "position": [
        600,
        100
      ],
      "credentials": {
        "sftp": {
          "id": "8w2Qr9qTiy7DwIn6",
          "name": "SFTP account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -2880,
        120
      ],
      "id": "a32e09ae-3d80-4c2f-bbca-69cf7957ca92",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "binaryPropertyName": "File",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1020,
        120
      ],
      "id": "915e316d-c0ff-42ee-b954-5c5a02ef2809",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "append",
              "field": "field"
            },
            {
              "aggregation": "append",
              "field": "type"
            }
          ]
        },
        "fieldsToSplitBy": "Table",
        "options": {}
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -800,
        120
      ],
      "id": "80c3d259-9bf5-4472-871c-5e8558d9631b",
      "name": "Summarize"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=The following sample data contains field names, types, field description, reasons. This shows my logic to figure out what a field name means based on type and table name and the field name.\n\nData:\n\nfield: PID\ntype: int\ndescription: Partner ID (int)\nreason: PID is the partner's unique identifier, serving as the primary key in the partner table.\n\nfield: PARTNERKOD\ntype: varchar\ndescription: Partner code (varchar)\nreason: PARTNERKOD stands for 'Partner Kod,' where 'Partner' is English and 'Kod' is Hungarian.\n\nfield: PARTNERKOD2\ntype: varchar\ndescription: Secondary partner code (varchar)\nreason: PARTNERKOD2 stands for a secondary partner code.\n\nfield: PARTNERNEV\ntype: varchar\ndescription: Partner name (varchar)\nreason: PARTNERNEV stands for 'Partner Nev,' where 'Nev' is Hungarian for 'name'.\n\nfield: ORSZAG\ntype: varchar\ndescription: Country (varchar)\nreason: ORSZAG is Hungarian for 'country'.\n\nfield: IRSZ\ntype: varchar\ndescription: Zip code (varchar)\nreason: IRSZ is short for 'irányítószám,' the Hungarian term for zip code.\n\nfield: VAROS\ntype: varchar\ndescription: City (varchar)\nreason: VAROS is Hungarian for 'city'.\n\nfield: UTCA\ntype: varchar\ndescription: Street (varchar)\nreason: UTCA is Hungarian for 'street'.\n\nfield: TELSZAM\ntype: varchar\ndescription: Telephone number (varchar)\nreason: TELSZAM stands for 'telefon szám,' the Hungarian phrase for telephone number.\n\nfield: FAXSZAM\ntype: varchar\ndescription: Fax number (varchar)\nreason: FAXSZAM means 'fax szám,' Hungarian for fax number.\n\nfield: EMAIL\ntype: varchar\ndescription: Email (varchar)\nreason: EMAIL is the English term for email.\n\nfield: WEB\ntype: varchar\ndescription: Website (varchar)\nreason: WEB is the English term for website.\n\nfield: REPTIPUS\ntype: varchar\ndescription: Report/representation type (varchar)\nreason: REPTIPUS likely refers to a report or representation type.\n\nfield: PARTNERTIPUS\ntype: varchar\ndescription: Partner type (varchar)\nreason: PARTNERTIPUS means 'partner típus,' Hungarian for partner type.\n\nfield: FIZOSZT\ntype: varchar\ndescription: Payment class (varchar)\nreason: FIZOSZT stands for 'fizetési osztály,' Hungarian for payment class.\n\nfield: PARTNERJELLEMZO\ntype: varchar\ndescription: Partner feature/descriptor (varchar)\nreason: PARTNERJELLEMZO is 'partner jellemző,' indicating a partner feature or descriptor.\n\nfield: PARTKATKOD\ntype: varchar\ndescription: Partner category code (varchar)\nreason: PARTKATKOD stands for 'partner kategória kód,' signifying a partner category code.\n\nfield: PARTMANAGERKOD\ntype: int\ndescription: Partner manager code (int)\nreason: PARTMANAGERKOD stands for 'partner manager kód,' used for identifying a partner manager.\n\nfield: VEVFIZMODID\ntype: int\ndescription: Customer payment mode ID (int)\nreason: VEVFIZMODID is short for 'vevő fizetési mód ID,' referencing the customer payment mode.\n\nfield: SZALLFIZMODID\ntype: int\ndescription: Shipping/payment mode ID (int)\nreason: SZALLFIZMODID is short for 'szállítási/fizetési mód ID.'\n\nfield: SZALLHATNAP\ntype: int\ndescription: Shipping deadline day (int)\nreason: SZALLHATNAP is 'szállítás határidő nap,' referencing the shipping deadline day.\n\nfield: SZALLMODKOD\ntype: int\ndescription: Shipping mode code (int)\nreason: SZALLMODKOD is 'szállítási mód kód,' a code for shipping mode.\n\nfield: FUVPARKOD\ntype: varchar\ndescription: Shipping partner code (varchar)\nreason: FUVPARKOD stands for 'fuv partner kód,' referencing the shipping partner code.\n\nfield: CEGCSOPID\ntype: int\ndescription: Company group ID (int)\nreason: CEGCSOPID stands for 'cég csoport ID,' meaning company group identifier.\n\nfield: SZALLNAP\ntype: int\ndescription: Shipping day (int)\nreason: SZALLNAP is short for 'szállítási nap,' specifying the shipping day.\n\nfield: PTIPUSC\ntype: int\ndescription: Possible partner/doc type (int)\nreason: PTIPUSC might be short for 'partner típus C,' referencing a possible partner/document type.\n\nfield: PARTNEROPCIOK\ntype: int\ndescription: Partner options (int)\nreason: PARTNEROPCIOK is 'partner opciók,' meaning partner options in Hungarian.\n\nfield: CREDIT\ntype: numeric\ndescription: Credit (numeric)\nreason: CREDIT is an English term for credit.\n\nfield: SZALLCREDIT\ntype: numeric\ndescription: Shipping credit (numeric)\nreason: SZALLCREDIT is short for 'szállítási credit,' referencing shipping credit.\n\nfield: FIZKESESNAP\ntype: int\ndescription: Late payment days (int)\nreason: FIZKESESNAP is 'fizetés késés nap,' representing the number of late payment days.\n\nfield: KAMATTIPUSKOD\ntype: int\ndescription: Interest type code (int)\nreason: KAMATTIPUSKOD stands for 'kamat típus kód,' a code for interest type.\n\nfield: VAMTIPUS\ntype: varchar\ndescription: Customs type (varchar)\nreason: VAMTIPUS is 'vám típus,' indicating a customs type.\n\nfield: DNEM\ntype: varchar\ndescription: Currency code (varchar)\nreason: DNEM is short for 'deviza neme,' meaning currency type or code.\n\nfield: ADOSZAM\ntype: varchar\ndescription: Tax number (varchar)\nreason: ADOSZAM is 'adó szám,' Hungarian for tax number.\n\nfield: MEGJ\ntype: varchar\ndescription: Note/comment (varchar)\nreason: MEGJ is short for 'megjegyzés,' meaning note or comment in Hungarian.\n\nfield: DEFCIMID\ntype: int\ndescription: Default address ID (int)\nreason: DEFCIMID likely stands for 'default cím ID,' referencing the default address identifier.\n\nfield: DELSTATUS\ntype: int\ndescription: Delete/Delivery status (int)\nreason: DELSTATUS may refer to 'delete' and ‘status';\n\nfield: PARTNERADAT1\ntype: varchar\ndescription: Partner data 1 (varchar)\nreason: PARTNERADAT1 means 'partner data 1,' providing an extra data field.\n\nfield: PARTNERADAT2\ntype: varchar\ndescription: Partner data 2 (varchar)\nreason: PARTNERADAT2 is another 'partner data' field, similar to PARTNERADAT1.\n\n\nfield: CRUS\ntype: int\ndescription: Created-by user (int)\nreason: CRUS likely stands for 'created user,' indicating who created the record.\n\nfield: CRDTI\ntype: datetime\ndescription: Creation datetime\nreason: CRDTI likely stands for 'creation date/time,' storing when the record was created.\n\nfield: UPUS\ntype: int\ndescription: Updated-by user (int)\nreason: UPUS parallels CRUS, indicating the user who updated the record.\n\nfield: UPDTI\ntype: datetime\ndescription: Update datetime\nreason: UPDTI parallels CRDTI, storing the date/time when the record was updated.\n\nfield: DEFCIKKID\ntype: int\ndescription: Default item/product ID (int)\nreason: DEFCIKKID stands for 'default cikk ID,' referencing the default item or product identifier.\n\nfield: DEFRID\ntype: int\ndescription: Default R ID (int)\nreason: DEFRID indicates the 'default raktár ID,' referencing the default warehouse identifier.\n\nfield: VISSZATERITES\ntype: numeric\ndescription: Refund/return amount (numeric)\nreason: VISSZATERITES is Hungarian for refund or return amount.\n\nfield: LEJARTCREDIT\ntype: numeric\ndescription: Expired credit (numeric)\nreason: LEJARTCREDIT combines 'lejárt' (expired) and 'credit,' indicating expired credit.\n\nfield: VEVOISCONTO\ntype: numeric\ndescription: Customer discount (numeric)\nreason: VEVOISCONTO combines 'vevői' (buyer) and 'sconto' (discount).\n\nfield: SZALLITOISCONTO\ntype: numeric\ndescription: Supplier discount (numeric)\nreason: SZALLITOISCONTO merges 'szállítói' (supplier) and 'sconto' (discount).\n\nfield: SZAVATIDOKORLAT\ntype: int\ndescription: Warranty time limit (int)\nreason: SZAVATIDOKORLAT is 'szavatossági idő korlát,' referring to a warranty time limit.\n\nfield: AFAADOSZAM\ntype: varchar\ndescription: VAT tax number (varchar)\nreason: AFAADOSZAM is 'áfa adószám,' referencing a VAT tax number.\n\nfield: PARITASCEL\ntype: varchar\ndescription: Parity target (varchar)\nreason: PARITASCEL merges 'paritás' (parity) and 'cél' (destination).\n\nfield: IDEGENCIKKNEV\ntype: varchar\ndescription: Foreign item name (varchar)\nreason: IDEGENCIKKNEV merges 'idegen' (foreign), 'cikk' (item), and 'név' (name).\n\nfield: BTO\ntype: varchar\ndescription: Internal code (varchar)\nreason: BTO could stand for 'back-to-order' or another internal code; usage is unclear.\n\nfield: STORNOBKOD\ntype: int\ndescription: Cancellation doc code (int)\nreason: STORNOBKOD merges 'storno' (cancellation) and 'bizonylat kód' (document code).\n\nfield: BEKERAR\ntype: numeric\ndescription: Purchase price (numeric)\nreason: BEKERAR is 'beszerzési ár,' referencing a purchase price.\n\nfield: KBEKERAR\ntype: numeric\ndescription: Purchase price (alt currency) (numeric)\nreason: KBEKERAR may reference a purchase price in an alternate currency or context.\n\nAt the end I will provide you with json data. The array contains fields you need to process. \nEach element in the array will have a table name, field and type fields. This describes fields in a database.\n\nyou will:\n\nTake each field name and use the table name and field name and type information to figure out what the field contains.\n\nMake your best guess based on the name (possibly Hungarian, English, or mixed) and table name and type.\nProvide a plausible Description and a short Reason that explains your inference.\n\nEnsure the description and reason are in the same style as my manual entries, clearly capturing what the field name most likely means and why you think so.\n\nPreserve the table name, field name, and type from the input; only the description and reason come from your best guess.\n\nImportant:\n\nIf the field matches an entry in the sample data exactly, use the sample data’s description and reason.\nKeep your explanations concise but clear.\n\nProcess these fields:\n\n{{ JSON.stringify($json.fields) }}\n\nand Format the output in json"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        120,
        360
      ],
      "id": "eec3e403-d6a3-436a-a015-d94fcd9d1bd9",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    \"output\": [\n      {\n        \"Table\": \"CEGCSOP\",\n        \"Field\": \"CEGCSOPID\",\n        \"Type\": \"int\",\n        \"Description\": \"Company group ID (int)\",\n        \"Reason\": \"CEGCSOPID stands for 'cég csoport ID,' meaning company group identifier.\"\n      },\n      {\n        \"Table\": \"CEGCSOP\",\n        \"Field\": \"CEGCSOPNEV\",\n        \"Type\": \"varchar(50)\",\n        \"Description\": \"Company group name (varchar)\",\n        \"Reason\": \"CEGCSOPNEV likely combines 'cég csoport' (company group) and 'név' (name), indicating the group's name.\"\n      },\n      {\n        \"Table\": \"CEGCSOP\",\n        \"Field\": \"TID\",\n        \"Type\": \"int\",\n        \"Description\": \"Transaction ID (int)\",\n        \"Reason\": \"TID commonly refers to 'transaction ID,' denoting the unique identifier for a transaction.\"\n      },\n      {\n        \"Table\": \"CEGCSOP\",\n        \"Field\": \"CRUS\",\n        \"Type\": \"int\",\n        \"Description\": \"Created-by user (int)\",\n        \"Reason\": \"CRUS likely stands for 'created user,' indicating who created the record.\"\n      },\n      {\n        \"Table\": \"CEGCSOP\",\n        \"Field\": \"CRDTI\",\n        \"Type\": \"datetime\",\n        \"Description\": \"Creation datetime\",\n        \"Reason\": \"CRDTI likely stands for 'creation date/time,' storing when the record was created.\"\n      },\n      {\n        \"Table\": \"CEGCSOP\",\n        \"Field\": \"UPUS\",\n        \"Type\": \"int\",\n        \"Description\": \"Updated-by user (int)\",\n        \"Reason\": \"UPUS parallels CRUS, indicating the user who updated the record.\"\n      },\n      {\n        \"Table\": \"CEGCSOP\",\n        \"Field\": \"UPDTI\",\n        \"Type\": \"datetime\",\n        \"Description\": \"Update datetime\",\n        \"Reason\": \"UPDTI parallels CRDTI, storing the date/time when the record was updated.\"\n      },\n      {\n        \"Table\": \"CEGCSOP\",\n        \"Field\": \"PARTNERCIMID\",\n        \"Type\": \"int\",\n        \"Description\": \"Partner address ID (int)\",\n        \"Reason\": \"PARTNERCIMID likely refers to the unique identifier for a partner's address.\"\n      },\n      {\n        \"Table\": \"CEGCSOP\",\n        \"Field\": \"CEGCSOPORTVEZETO\",\n        \"Type\": \"int\",\n        \"Description\": \"Company group leader ID (int)\",\n        \"Reason\": \"CEGCSOPORTVEZETO likely translates to 'cég csoport vezető,' indicating the identifier for the leader of the company group.\"\n      }\n    ]\n  },\n  {\n    \"output\": [\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"PARTKATKOD\",\n        \"type\": \"varchar(10)\",\n        \"description\": \"Partner category code (varchar)\",\n        \"reason\": \"PARTKATKOD stands for 'partner kategória kód,' signifying a partner category code.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"PARTKATNEV\",\n        \"type\": \"varchar(40)\",\n        \"description\": \"Partner category name (varchar)\",\n        \"reason\": \"PARTKATNEV likely refers to 'partner kategória név,' making it the name of the partner category.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"PKATADAT1\",\n        \"type\": \"varchar(120)\",\n        \"description\": \"Partner category data 1 (varchar)\",\n        \"reason\": \"PKATADAT1 suggests it stores additional data about the partner category.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"PKATADAT2\",\n        \"type\": \"varchar(120)\",\n        \"description\": \"Partner category data 2 (varchar)\",\n        \"reason\": \"PKATADAT2 likely serves as another field for extra data regarding the partner category.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"PKATADAT3\",\n        \"type\": \"varchar(120)\",\n        \"description\": \"Partner category data 3 (varchar)\",\n        \"reason\": \"PKATADAT3 is presumably an additional field for even more partner category data.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"TID\",\n        \"type\": \"int\",\n        \"description\": \"Transaction ID (int)\",\n        \"reason\": \"TID typically refers to 'transaction ID,' used for identifying transactions.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"CRDTI\",\n        \"type\": \"datetime\",\n        \"description\": \"Creation datetime\",\n        \"reason\": \"CRDTI stands for 'creation date/time,' storing when the partner category record was created.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"CRUS\",\n        \"type\": \"int\",\n        \"description\": \"Created-by user (int)\",\n        \"reason\": \"CRUS likely stands for 'created user,' indicating who created the partner category record.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"UPDTI\",\n        \"type\": \"datetime\",\n        \"description\": \"Update datetime\",\n        \"reason\": \"UPDTI parallels CRDTI, storing the date/time when the partner category record was last updated.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"UPUS\",\n        \"type\": \"int\",\n        \"description\": \"Updated-by user (int)\",\n        \"reason\": \"UPUS indicates the user who updated the partner category record.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"LEIRAS\",\n        \"type\": \"varchar\",\n        \"description\": \"Description (varchar)\",\n        \"reason\": \"LEIRAS likely represents a descriptive text about the partner category.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"WEBESLEIRAS\",\n        \"type\": \"varchar\",\n        \"description\": \"Web description (varchar)\",\n        \"reason\": \"WEBESLEIRAS likely refers to a description intended for web representation of the partner category.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"ELOFOGLKEZ\",\n        \"type\": \"int\",\n        \"description\": \"Pre-condition handling ID (int)\",\n        \"reason\": \"ELOFOGLKEZ possibly stands for 'előfoglalás kezelés,' which could indicate handling pre-conditions.\"\n      },\n      {\n        \"table\": \"PARTKAT\",\n        \"field\": \"ELOFOGLTIPID\",\n        \"type\": \"int\",\n        \"description\": \"Pre-condition type ID (int)\",\n        \"reason\": \"ELOFOGLTIPID likely signifies an ID for the type of pre-condition related to the partner category.\"\n      }\n    ]\n  },\n  {\n    \"output\": [\n      {\n        \"Table\": \"REGIO\",\n        \"Field\": \"REGIOKOD\",\n        \"Type\": \"int\",\n        \"Description\": \"Region code (int)\",\n        \"Reason\": \"REGIOKOD likely refers to a code that uniquely identifies a region.\"\n      },\n      {\n        \"Table\": \"REGIO\",\n        \"Field\": \"REGIONEV\",\n        \"Type\": \"varchar(30)\",\n        \"Description\": \"Region name (varchar)\",\n        \"Reason\": \"REGIONEV suggests it represents the name of the region, with 'nev' indicating 'name' in Hungarian.\"\n      },\n      {\n        \"Table\": \"REGIO\",\n        \"Field\": \"TID\",\n        \"Type\": \"int\",\n        \"Description\": \"Transaction ID (int)\",\n        \"Reason\": \"TID could stand for 'Transaction ID,' often used as a unique identifier for transactions.\"\n      },\n      {\n        \"Table\": \"REGIO\",\n        \"Field\": \"CRUS\",\n        \"Type\": \"int\",\n        \"Description\": \"Created-by user (int)\",\n        \"Reason\": \"CRUS likely stands for 'created user,' indicating who created the record.\"\n      },\n      {\n        \"Table\": \"REGIO\",\n        \"Field\": \"CRDTI\",\n        \"Type\": \"datetime\",\n        \"Description\": \"Creation datetime\",\n        \"Reason\": \"CRDTI likely stands for 'creation date/time,' storing when the record was created.\"\n      },\n      {\n        \"Table\": \"REGIO\",\n        \"Field\": \"UPUS\",\n        \"Type\": \"int\",\n        \"Description\": \"Updated-by user (int)\",\n        \"Reason\": \"UPUS parallels CRUS, indicating the user who updated the record.\"\n      },\n      {\n        \"Table\": \"REGIO\",\n        \"Field\": \"UPDTI\",\n        \"Type\": \"datetime\",\n        \"Description\": \"Update datetime\",\n        \"Reason\": \"UPDTI parallels CRDTI, storing the date/time when the record was updated.\"\n      },\n      {\n        \"Table\": \"REGIO\",\n        \"Field\": \"PARTMANAGERKOD\",\n        \"Type\": \"int\",\n        \"Description\": \"Partner manager code (int)\",\n        \"Reason\": \"PARTMANAGERKOD stands for 'partner manager kód,' used for identifying a partner manager.\"\n      }\n    ]\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1260,
        -540
      ],
      "id": "34686d76-5fda-49c2-9d13-5bedddf64c80",
      "name": "return sample data",
      "disabled": true
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const input = $input.item.json;\nconst outputArray = input.appended_field.map((field, index) => ({\n    \"table\": input.Table,  \n    \"field\": field,\n    \"type\": input.appended_type[index]\n}));\n\nreturn { \n  \"table\": input.Table,\n  \"fields\": outputArray \n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -580,
        120
      ],
      "id": "0014572d-1336-405b-bc0c-65ad0177c0c8",
      "name": "Create field list by table"
    },
    {
      "parameters": {
        "operation": "toJson",
        "options": {
          "fileName": "={{ $json.Table || $json.table }}.json"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        1000,
        720
      ],
      "id": "755a92fd-bd65-4160-8f41-fdc101930b2a",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -60,
        120
      ],
      "id": "dcbd2b17-c1c9-4a3c-a18c-e1e3cbc14d4f",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "jsCode": "const out = $input.first().json.output;\nif (out) {\n  return out;\n} else {\n  return {\n    \"error\": \"output not found\"\n  }\n}\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        360
      ],
      "id": "4c9a597b-a8d2-4699-b40a-c030be4b1548",
      "name": "Remove Output"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        280,
        100
      ],
      "id": "408ec708-2bba-48b0-9ebb-ffc9c4f83446",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "model": "deepseek-r1:14b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [
        60,
        620
      ],
      "id": "506cb0c5-66aa-47be-bac4-1d1657bbc2fe",
      "name": "Ollama Model",
      "credentials": {
        "ollamaApi": {
          "id": "n51dXcPMvNZlt98X",
          "name": "Ollama account"
        }
      }
    }
  ],
  "connections": {
    "FTP Download file": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FTP List files on ftp": {
      "main": [
        [
          {
            "node": "Filter only PDFs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pick file": {
      "main": [
        [
          {
            "node": "FTP Move file to Processing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter only PDFs": {
      "main": [
        [
          {
            "node": "Pick file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file via SSH": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FTP Move file to Processing": {
      "main": [
        [
          {
            "node": "FTP Download file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FTP Move file to Done": {
      "main": [
        []
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "FTP List files on ftp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Create field list by table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Remove Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create field list by table": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "return sample data": {
      "main": [
        []
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "Upload file via SSH",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Output": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "FTP Move file to Done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "ba8b78d6-c92b-4930-9539-43d9c7c06f3a",
  "triggerCount": 0,
  "tags": [],
  "shared": [
    {
      "createdAt": "2025-04-02T12:39:45.945Z",
      "updatedAt": "2025-04-02T12:39:45.945Z",
      "role": "workflow:owner",
      "workflowId": "fbPCcaIC6TAaFkAN",
      "projectId": "8CGNWCigao1I4jrt",
      "project": {
        "createdAt": "2025-04-02T11:57:30.751Z",
        "updatedAt": "2025-04-02T12:39:24.926Z",
        "id": "8CGNWCigao1I4jrt",
        "name": "istvano orbani <admin@localhost.com>",
        "type": "personal",
        "icon": null,
        "description": null
      }
    }
  ]
}